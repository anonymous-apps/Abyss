datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

model UserSettings {
  id         String   @id 
  references Json?    
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sidebarOpen  Boolean @default(true)
  lastPage     String  @default("/")
  theme        String  @default("abyss")
  bootstrapped Boolean @default(false)
}

model Metric {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  name       String
  dimensions Json?    
  value      Float
}

model TextLog {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  text String
}

model NetworkCall {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  endpoint String
  method   String
  body     String
  response String
  status   String
}

model Jobs {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  name          String
  type          String
  status        String
  textLogId     String?
}

model ModelConnections {
  id          String   @id 
  references  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String
  
  provider    String
  modelId     String
  type        String
  data        Json?    
}

model MessageThread {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  lockingId String?
}

model Message {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  threadId   String
  type       String
  sourceId   String
  content    String
}

model RenderedConversationThread {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  messages   Json 
}

model Chat {
  id          String   @id 
  references  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String
  
  type        String
  sourceId    String
  threadId    String?
}

model Agent {
  id          String   @id 
  references  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String
  
  chatModelId String
}

model AgentToolConnection {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  agentId    String
  toolId     String
  permission String
}

model Tool {
  id          String   @id 
  references  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String
  
  type        String
  schema      Json     
  data        Json?    
}

model ToolInvocation {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  toolId     String
  parameters Json    
  result     Json?   
  textLogId  String?
  status     String
}

model ResponseStream {
  id         String   @id 
  references Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sourceId    String
  resultMessages Json
  status      String
  rawOutput   String
}